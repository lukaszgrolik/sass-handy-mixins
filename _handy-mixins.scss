@mixin centered-area($width, $padding: 0) {
  max-width: $width;
  padding-left: $padding;
  padding-right: $padding;
  margin-left: auto;
  margin-right: auto;
}

@mixin cf {
  *zoom: 1;

  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }
}

@mixin dib {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}

@mixin flag-obj($space: 0, $reverse: false) {
  $n: 2;
  $side: left;
  
  @if $reverse {
    $n: 1;
    $side: right;
  }
  
  display: table;
  
  > * {
    vertical-align: top;
    display: table-cell;
  }
  
  > :nth-child(#{$n}) {
    @include box-sizing(border-box);
    
    padding-#{$side}: $space;
    width: 100%;
    display: table-cell;
  }
}

@mixin gradient($color1, $color2, $fallback-color: $color1) {
  background: $fallback-color;

  @include background(linear-gradient($color1, $color2));

  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=#{$color1}, endColorstr=#{$color2})
}

@mixin ma {
  margin-left: auto;
  margin-right: auto;
}

@mixin placeholder {
  // WebKit browsers
  &::-webkit-input-placeholder { @content; }
   
  // Mozilla Firefox 4 to 18
  &:-moz-placeholder { opacity: 1; @content; }
   
  // Mozilla Firefox 19+
  &::-moz-placeholder { opacity: 1; @content; }
   
  // Internet Explorer 10+
  &:-ms-input-placeholder { @content; }
}

@mixin placeholder-and-field {
  @include placeholder {
    @content;
  }

  @content;
}

@mixin quotes {
  quotes: "„" "”" "»" "«";
  
  &:before { content: open-quote; }
  &:after { content: close-quote; }
}

@mixin transparent($color, $alpha) {
  $rgba: rgba($color, $alpha);
  $ie-hex-str: ie-hex-str($rgba);

  background-color: transparent;
  background-color: $rgba;
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
  zoom: 1;

  // IE9 supports both rgba and filter
  .ie9 & {
    // IE9 only - disable filter
    filter: progid:DXImageTransform.Microsoft.gradient(enabled='false');
  }
}

@mixin triangle($direction, $color, $size) {
  width: 0;
  height: 0;

  $size-dir-1: null;
  $size-dir-2: null;
  $size-dir-3: null;

  @if length($size) == 1 {
    $size-dir-1: $size;
    $size-dir-2: $size;
    $size-dir-3: $size;
  } @else if length($size) == 2 {
    $size-dir-1: nth($size, 1);
    $size-dir-2: nth($size, 2);
    $size-dir-3: nth($size, 2);
  } @else if length($size) == 3 {
    $size-dir-1: nth($size, 1);
    $size-dir-2: nth($size, 2);
    $size-dir-3: nth($size, 3);
  }
 
  @if $direction == left {
    border-right: $size-dir-1 solid $color;
    border-top: $size-dir-2 solid transparent;
    border-bottom: $size-dir-3 solid transparent;
  }
  
  @else if $direction == right {
    border-left: $size-dir-1 solid $color;
    border-top: $size-dir-2 solid transparent;
    border-bottom: $size-dir-3 solid transparent;
  }
  
  @else if $direction == top {
    border-bottom: $size-dir-1 solid $color;
    border-left: $size-dir-2 solid transparent;
    border-right: $size-dir-3 solid transparent;
  }
  
  @else if $direction == bottom {
    border-top: $size-dir-1 solid $color;
    border-left: $size-dir-2 solid transparent;
    border-right: $size-dir-3 solid transparent;
  }
}

//

@mixin generate-handy-classes {
  .cf { @include cf; }
  .dib { @include dib; }
  .flag-obj { @include flag-obj; }
  .ma { @include ma; }
}

@mixin wysiwyg-style {
  b, strong { font-weight: bold; }
  i, em, cite { font-style: italic; }
  u, ins { text-decoration: underline; }
  s, del { text-decoration: line-through; }
  code, kbd, samp, var { font-family: monospace; }
  small { font-size: 75%; }

  q { quotes: "“" "”" "‘" "’"; }
  q:before { content: open-quote; }
  q:after { content: close-quote; }
}